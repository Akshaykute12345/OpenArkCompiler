/*
 * Copyright (c) [2020] Huawei Technologies Co.,Ltd.All rights reserved.
 *
 * OpenArkCompiler is licensed under the Mulan PSL v1.
 * You can use this software according to the terms and conditions of the Mulan PSL v1.
 * You may obtain a copy of Mulan PSL v1 at:
 *
 *     http://license.coscl.org.cn/MulanPSL
 *
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
 * FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PSL v1 for more details.
 */

//SEED=4141941138

import java.util.zip.CRC32;

class MainClass 
{
	   boolean var_2 = false;
	  static long [] var_4 = {(-3773717197363638352L)};
	  static byte var_5 = (byte)(-115);
	  static long var_10 = (-4377553331259553286L);
	  static short var_12 = (short)(-20583);
	  static cl_28 var_18 = new cl_28();
	  static int var_25 = (-1230583093);
	  static cl_33 var_31 = new cl_33();
	  static int var_33 = (434354797);
	  static cl_33 [][] var_37 = {{new cl_33(),new cl_33(),new cl_33()},{new cl_33(),new cl_33(),new cl_33()},{new cl_33(),new cl_33(),new cl_33()},{new cl_33(),new cl_33(),new cl_33()}};
	final   float [] var_47 = {(-4.24882e+15F)};
	  static cl_28 var_49 = new cl_28();
	  static double var_64 = (-8.58758e+43D);
	  static short var_66 = (short)(31009);
	  static int var_73 = (-440029876);
	  static float var_76 = (-7.26355e+26F);
	  static short var_79 = (short)(-18347);
	   byte var_97 = (byte)(78);
	   byte var_107 = (byte)(62);
	   byte var_111 = (byte)(-14);
	   int var_113 = (1727448661);
	   long var_116 = (8261368454954444315L);
/*********************************/
public strictfp void run()
{
	   int var_0 = (-1235210439);
	for( var_0 = 552 ;(var_0<616);var_0 = (var_0+16) )
	{
		   double [][][] var_8 = {{{(5.51568e+92D),(-5.38274e-50D),(4.01597e-202D),(4.87622e+132D),(8.6048e+113D)},{(-1.11186e+31D),(-7.22853e-134D),(6.38033e+223D),(-8.27642e-278D),(2.70882e+130D)},{(2.75463e+275D),(1.31328e-48D),(-2.85659e+24D),(4.44091e+163D),(-6.56109e-278D)},{(-9.12656e-307D),(-4.13967e-99D),(5.50813e-101D),(1.3431e+135D),(1.37577e-21D)},{(4.28697e-290D),(5.69343e+244D),(-1.28304e+293D),(7.64871e+290D),(2.83616e+132D)},{(9.82131e-48D),(-7.79422e+40D),(3.50814e-31D),(1.08861e+198D),(1.51336e-226D)},{(-2.84842e-176D),(-1.52797e+220D),(1.72186e+92D),(-6.23288e-284D),(2.0932e+232D)}},{{(1.27521e+277D),(-9.27397e-157D),(-1.32298e+77D),(-5.8806e+300D),(3.02262e+33D)},{(-1.03648e+155D),(-2.17472e-228D),(1.07497e+297D),(1.18992e-173D),(-1.1904e+194D)},{(4.45214e+151D),(-4.03845e+120D),(-3.52934e+252D),(-9.99633e+294D),(1.17157e-285D)},{(-1.27071e-50D),(1.53401e-39D),(-1.9649e-80D),(8.04822e-189D),(9.52044e+70D)},{(2.49973e+293D),(2.33587e+271D),(9.05078e+305D),(6.06646e-304D),(4.34685e+137D)},{(3.48884e-172D),(1.8682e+293D),(3.4868e-261D),(-2.96896e+22D),(-1.92214e-109D)},{(-1.86824e-164D),(-1.02341e+124D),(-5.65343e-243D),(-2.42396e-26D),(-2.13756e+20D)}},{{(-3.77922e+183D),(-2.04315e-178D),(5.83422e-215D),(5.3315e-262D),(-5.48778e-270D)},{(-0.00206655D),(-5.10173e+193D),(-3.23732D),(-4.83344e-08D),(-1.94308e-145D)},{(1.05131e+128D),(2.17573e+86D),(4.26417e-178D),(-1.67155e+65D),(-4.44444e-54D)},{(2.84398e-85D),(-1.68755e+48D),(-2.56244e-207D),(-5.72905e-211D),(-1.58595e-283D)},{(-5.66179e-103D),(7.75251e-228D),(2.89468e+25D),(1.3123e-253D),(1.40907e-286D)},{(-1.95704e+213D),(4.7351e+156D),(-2.38355e+101D),(-7.90601e-270D),(8.1047e+221D)},{(8.70978e+20D),(1.42522e-254D),(2286.62D),(5.48269e+253D),(4.16228e-255D)}},{{(1.03758e+283D),(-1.93518e-16D),(3.24218e+249D),(-1.77299e+16D),(-2.26087e+114D)},{(-2.34803e-179D),(1.47904e-25D),(1.61591e-87D),(3.91275e+257D),(-0.00750717D)},{(-4.99273e+240D),(-5.66726e+64D),(2.74941e-197D),(1.48101e+230D),(2.23354e-23D)},{(-1.61379e-195D),(3.16873e+130D),(-1.1537e-127D),(-1.05285e+253D),(4.78199e+123D)},{(2.14803e-220D),(-4.7969e+66D),(5.1791e-36D),(7.21787e-71D),(-3.30708e+51D)},{(2.01522e-249D),(1.62205e-93D),(4.28187e-288D),(1.82592e+100D),(-5.43085e+48D)},{(1.25709e-64D),(-1.23168e-94D),(-1.13588e+09D),(-1.58199e+270D),(-4.44033e+120D)}},{{(-5.42525e+62D),(-7.56824e-59D),(-1.10686e-107D),(-8.75376e-238D),(7.2204e-176D)},{(-1.32263e-151D),(4.25955e+217D),(-14680.6D),(-1.07178e-167D),(-1.38068e-152D)},{(-1.29163e+198D),(-4.50729e-106D),(-1.23734e-275D),(-1.3236e-05D),(1.30886e-247D)},{(-3.92234e-192D),(9.97808e+296D),(-1.33535e+51D),(-2.70177e+59D),(3.25081e+183D)},{(-6.98617e-170D),(1.08954e-251D),(3.07489e+72D),(-9.23661e+17D),(-2.49942e-104D)},{(6.59857e+204D),(8.53248e+297D),(1.23095e-18D),(7.2117e-273D),(3.98244e-261D)},{(-9.29777e-214D),(-2.39709e-202D),(4.32093e+09D),(-4.43285e-237D),(1.29859e+162D)}},{{(-1.57371e-204D),(-2.56299e-217D),(-9.0761e-112D),(-1.01596e+132D),(8.0639e+13D)},{(6.92208e-232D),(-26.6094D),(1.73072e+65D),(2.7845e+121D),(-3.77836e-93D)},{(-9.41798e+14D),(5.44654e-63D),(-4.80239e-80D),(-1.37785e+290D),(3.35999e+212D)},{(-8.30931e-279D),(3.91342e+270D),(2.84195e-96D),(-4.20345e+290D),(-2.15647e+83D)},{(-6.2449e-205D),(1.9891e-74D),(1.64714e-144D),(1.02059e+207D),(-1.15603e+128D)},{(6.01745e+181D),(1.36183e+25D),(-7.59864e+306D),(6.33709e+164D),(-4.96183e+66D)},{(-3.08432e+204D),(-5.64084e-289D),(4.44068e+165D),(2.39097e+201D),(7.77976e-147D)}},{{(-5.27008e+129D),(4.72321e-265D),(2.07521e-06D),(3.45049e-29D),(-2.214e-23D)},{(-8.74176e+136D),(1.94859e-229D),(-8.06551e+137D),(-9.99969e-260D),(-2.03684e+279D)},{(-2.94077e-262D),(-8.88558e-203D),(-6.87383e-113D),(-6.77276e-154D),(-2.6584e+111D)},{(-4.20369e-250D),(-1.04177e+83D),(2.49957e-214D),(-1.25083e+58D),(-6.20462e-114D)},{(-12.8981D),(6.34274e-198D),(7.74182e-106D),(-6.40677e+90D),(4.06522e+263D)},{(8.68331e-37D),(-2.76257e+16D),(1.92818e+101D),(-2.38642e-87D),(4.93785e-293D)},{(5.26056e+253D),(-1.49283e+108D),(-1.01603e-297D),(3.36598e+156D),(6.54228e-23D)}}};
		   int var_1 = (910098915);
		for( var_1 = 902 ;(var_1>887);var_1 = (var_1-5) )
		{
			   cl_33 var_122 = new cl_33();
			   double [][][] var_9 = {{{(-1.16496e+282D),(8.77772e+17D),(-4.09236e+149D),(2.83198e-74D),(-3.18443e+53D)},{(-6.93099e-308D),(-2.27222e-76D),(-1.3292e-05D),(2.63265e-303D),(-1.23874e+72D)},{(1.44351e+93D),(-6.8425e+118D),(5.3275e+281D),(1.33461e-211D),(4.93503e-232D)},{(6.30349e+202D),(-1.45816e-272D),(-4.3068e-86D),(1.33002e-65D),(2.84782e+202D)},{(4.22369e-20D),(-3.13324e+158D),(4.22965e-36D),(1.85574e-64D),(-2.74438e-114D)},{(2.26578e-117D),(-4.06948e+52D),(1.10884e-126D),(-2.60177e+306D),(-1.85978e+207D)},{(-3.93014e+303D),(-7.54611e+248D),(1.41901e+179D),(6.30568e-150D),(-3.77393e+65D)}},{{(-6.33674e+36D),(5.45273e-116D),(-2.61384e-168D),(-4.31577e-268D),(-4.16899e-260D)},{(-1.83612e+96D),(2.6013e+257D),(1.58032e+136D),(1.48026e-266D),(-2.17905e+264D)},{(2.25145e+90D),(-2.24689e+15D),(9.584e+75D),(4.48863e-55D),(-1.20441e+94D)},{(-1.13247e-294D),(2.87023e+230D),(-3.6204e-243D),(-1.09712e+204D),(2.65437e+244D)},{(2.39343e+92D),(2.17772e+13D),(3.83057e-53D),(-1.89754e-84D),(7.05949e+137D)},{(-1.35682e-36D),(30574.1D),(-5.3752e+19D),(-2.17346e+252D),(-1.03261e+68D)},{(7.32485e+126D),(2.09216e-115D),(4.52289e+113D),(1.74721e+304D),(2.45157e-19D)}},{{(3.41804e-175D),(5.48284e+281D),(5.914e-101D),(-1.39198e-99D),(1.30654e-225D)},{(2.15868e+10D),(-1.7893e-120D),(2.52997e+210D),(-8.98425e-08D),(-2.42507e+63D)},{(1.12557e+196D),(-3.81426e-181D),(5.70444e+112D),(4.48383e+263D),(-3.35362e-91D)},{(-1.60803e-96D),(-2.93228e+212D),(2.48574e+248D),(-7.11244e+79D),(-3.42539e+216D)},{(1.82104e-156D),(1.48902e+299D),(-1.7146e-297D),(10994.9D),(-9.53057e+301D)},{(7.59703e-67D),(-2.56505e-67D),(3.57368e-257D),(-4.00728e-224D),(-2.12782e-161D)},{(8.30515e-133D),(4.37718e-27D),(-1.01992e+06D),(-2.07333e+99D),(3.33821e-70D)}},{{(1.70811e-290D),(-2.02061e+07D),(-1.61962e-40D),(-1.41357e-302D),(-2.94708e-256D)},{(-1.64181e+191D),(-1.197e-117D),(-1.30857e+135D),(4.57856e-204D),(6.73139e+168D)},{(6.61629e+65D),(4.38039e+54D),(1.54864e-288D),(-2.97146e+280D),(-1.82757e+189D)},{(-4.36358e-179D),(-5.66655e+143D),(3.44945e+201D),(-6.5424e-193D),(2.63402e+216D)},{(1.80713e+161D),(-5.87073e-159D),(-1.46925e-235D),(3.84262e-23D),(3.40639e-12D)},{(-1.3541e+247D),(1.35478e-263D),(-3.18029e+191D),(-3.27218e-06D),(6.86267e-170D)},{(-1.57579e+285D),(-2.10529e-233D),(1.65454e-12D),(-4.65281e+31D),(1.20352e+235D)}},{{(-3.0588e+243D),(4.52463e-120D),(6.87896e+79D),(-1.14086e+241D),(-7.92814e-135D)},{(-1.84575e-144D),(-1.07464e-260D),(5.00213e+132D),(2.07317e-207D),(1.03001e-223D)},{(3.10893e-07D),(3.96148e-224D),(1.80507e-216D),(-7.47844e+101D),(-7.05152e+164D)},{(-3.37177e+78D),(-7.96233e-306D),(6.44505e-189D),(-4.67288e+33D),(-8.23037e+275D)},{(7.14445e-41D),(1.24896e+298D),(1.98244e-216D),(4.17737e+227D),(4.87176e+231D)},{(-2.00909e-107D),(-2.65357e-25D),(2.60118e+141D),(-7.79067e-219D),(0.0299727D)},{(-1.12842e-289D),(-1.10718e+80D),(2.06746e-236D),(8.15854e-228D),(6.37274e-140D)}},{{(-4.01122e-199D),(-7.35263e-152D),(-4.39956e-119D),(-2.81081e-83D),(8.82135e+247D)},{(-8.32707e+300D),(-2.51279e+255D),(1.34842e+228D),(-7.50769e-184D),(-9.49466e+119D)},{(-3.20694e+32D),(2.17506e-20D),(-3.77916e-191D),(2.83201e+253D),(1.55911e-149D)},{(-8.58629e+127D),(-2.12312e-261D),(-6.48035e+262D),(1.85821e-162D),(-1.02828e+237D)},{(-3.46379e-170D),(-6.34382e+92D),(2.69015e+103D),(1.29347e+239D),(-3.22069e-227D)},{(4.07253e-191D),(-3.36681e+209D),(2.90512e+272D),(6.16326e-205D),(2.83839e+141D)},{(2.65619e-239D),(-6.05446e+26D),(-2.53294e-180D),(1.8948e+127D),(-1.73169e-204D)}},{{(-2.39569e+230D),(-5.99064e-306D),(-1.53449e+51D),(2.30216e-297D),(3.62427e+168D)},{(1.46693e-298D),(-4.368e-66D),(-2.23509e+10D),(-15.951D),(1.29763e-25D)},{(-3.83691e-277D),(2.06804e+160D),(1.76943e-84D),(1.79323e+160D),(-1.40306e-182D)},{(-1.43179e-07D),(-3.08995e+107D),(2.42891e+207D),(-7.83727e+216D),(3.5436e-277D)},{(2.26364e-75D),(4.86177e+246D),(-2.91577e-63D),(4.08994e+300D),(2.37932e+207D)},{(-2.50053e+44D),(2.27394e+182D),(-3.35997e+100D),(-3.45457e-199D),(2.945e+216D)},{(-2.07499e+83D),(5.13207e-207D),(5.07781e+234D),(-5.43284e-27D),(-2.41732e+72D)}}};
			   byte var_11 = (byte)(-113);
			try
			{
				var_2 = true ;
				var_4[((--var_5)&0)] = (-6942942139031839986L) ;
				   float var_119 = (1.85112e+36F);
				   long var_6 = (-3144904360231079563L);
				var_4[((var_5++)&0)] = (--var_6) ;
				var_8 = var_9 ;
				var_4[((+(var_11--))&0)] = ((--var_12)&func_13(((--var_113)*var_18.var_114) ,((+((var_116++)*var_33))!=var_66) ,var_49 ,(var_119--))) ;
			}
			catch( java.lang.ArrayIndexOutOfBoundsException myExp_121 )
			{
				var_31 = var_31 ;
				System.out.println("hello exception 0 !");
			}
		}
	}
	return ;
}
public strictfp int func_13(long var_14, boolean var_15, cl_28 var_16, double var_17)
{
	   byte var_112 = (byte)(6);
	try
	{
		   cl_33 var_105 = new cl_33();
		if( var_18.var_19)
		{
			   long var_90 = (8350688230254759092L);
			try
			{
				   int var_92 = (2067200394);
				var_16 = func_20(var_31 ,(var_90++) ,func_20(var_31 ,(var_90--) ,func_20(var_31 ,(var_92--) ,var_18))) ;
			}
			catch( java.lang.IllegalArgumentException myExp_95 )
			{
				var_49.var_96 = func_34((~(var_97++)) ,var_37) ;
				System.out.println("hello exception 1 !");
			}
		}
		else
		{
			   short var_102 = (short)(-13999);
			   cl_33 [][][] var_101 = {{{new cl_33(),new cl_33()}},{{new cl_33(),new cl_33()}},{{new cl_33(),new cl_33()}},{{new cl_33(),new cl_33()}},{{new cl_33(),new cl_33()}},{{new cl_33(),new cl_33()}},{{new cl_33(),new cl_33()}}};
			   int var_103 = (700400655);
			   cl_33 var_104 = new cl_33();
			var_101[((++var_33)&6)][((var_103++)&0)][((++var_102)&1)] = var_31 ;
		}
	}
	catch( java.lang.ArrayIndexOutOfBoundsException myExp_106 )
	{
		   float [][] var_110 = {{(-1.38016e-12F)}};
		if( (((++var_5)&( ( byte )((+(var_107--))+( ( short )var_25 )) ))==var_31.var_67))
		{
			   short var_108 = (short)(-6810);
			if( (!((var_108++)<(-4.78614e-108D))))
			{
				var_110[((+(--var_111))&0)][((var_66--)&0)] = func_34((++var_108) ,var_37) ;
			}
		}
		System.out.println("hello exception 2 !");
	}
	return ((++var_112)&var_31.var_61);
}
public strictfp cl_28 func_20(cl_33 var_21, long var_22, cl_28 var_23)
{
	   int var_24 = (-2024360757);
	for( var_24 = 612 ;(var_24>610);var_24 = (var_24-2) )
	{
		   float [] var_28 = {(3.51417e+13F),(3.47909e+23F),(6.8113e+24F),(-4.84916e+14F)};
		for( var_25 = 625 ;(var_25>571);var_25 = (var_25-18) )
		{
			try
			{
				var_18 = var_18 ;
			}
			catch( java.lang.IllegalArgumentException myExp_26 )
			{
				   byte var_30 = (byte)(-48);
				   byte var_29 = (byte)(66);
				   byte var_87 = (byte)(-107);
				var_28[((-(var_29--))&3)] = ((~(--var_30))+var_31.var_32) ;
				var_28[((var_5--)&3)] = ((var_33++)*func_34((var_87++) ,var_37)) ;
				System.out.println("hello exception 3 !");
			}
		}
	}
	return var_49;
}
public static strictfp float func_34(int var_35, cl_33[][] var_36)
{
	   byte var_86 = (byte)(1);
	   short var_85 = (short)(-22599);
	if( true)
	{
		try
		{
			   int var_78 = (-293382118);
			try
			{
				   byte var_77 = (byte)(-94);
				var_36 = func_38((-(var_5--)) ,(-2.81458e+11F) ,(+(+(++var_77))) ,(var_78--) ,(var_78--) ,var_31 ,((var_78++)*( ( long )(((var_79--)|var_31.var_67)*var_18.var_80) ))) ;
			}
			catch( java.lang.ArrayIndexOutOfBoundsException myExp_81 )
			{
				   int var_82 = (-1293045806);
				System.out.println("hello exception 4 !");
			}
		}
		catch( java.lang.ArrayIndexOutOfBoundsException myExp_83 )
		{
			   cl_28 var_84 = new cl_28();
			if( (!((((var_33--)+var_73)+var_76)!=var_31.var_67)))
			{
				var_49 = var_49 ;
			}
			System.out.println("hello exception 5 !");
		}
	}
	return ((var_85--)&( ( long )(++var_86) ));
}
public static strictfp cl_33[][] func_38(double var_39, float var_40, long var_41, long var_42, int var_43, cl_33 var_44, double var_45)
{
	   int var_46 = (1451201338);
	for( var_46 = 614 ;(var_46<634);var_46 = (var_46+10) )
	{
		   byte var_57 = (byte)(-21);
		try
		{
			   int var_68 = (-71561429);
			   double [] var_54 = {(-3.25364e-167D),(-4.51562e-100D),(4.33886e+92D),(-1.34758e-92D),(-9.24429e-262D)};
			   short var_48 = (short)(-26748);
			   double [] var_53 = {(1.20256e-287D),(7.22488e+216D),(-7.13519e-55D),(-9.16196e-128D),(4.54712e+251D)};
			try
			{
				   boolean var_50 = true;
				   cl_33 var_51 = new cl_33();
				var_40 = (var_40--) ;
				var_42 = (var_48--) ;
				   double var_58 = (-1.29585e-227D);
				var_18 = var_49 ;
				var_31.var_52 = var_31.var_52 ;
				var_53[((++var_48)&4)] = (var_43--) ;
				var_54[((++var_5)&4)] = (((var_43++)*var_31.var_32)*(-1.04169e-21F)) ;
				var_4[(((~(--var_12))*var_31.var_32)&0)] = ((var_5++)-var_10) ;
				var_37[((-(--var_57))&3)][((+(var_5++))&2)] = var_44 ;
				var_43 = ((--var_48)+var_57) ;
				var_54[((++var_48)&4)] = (~(var_57--)) ;
				var_5 = (var_57--) ;
				var_33 = (var_33--) ;
				var_54 = var_53 ;
				var_37[((~((--var_5)&var_31.var_61))&3)][((-(var_5++))&2)] = var_31 ;
				var_37[((++var_33)&3)][((++var_43)&2)] = var_44 ;
				var_53[((++var_57)&4)] = (--var_43) ;
			}
			catch( java.lang.IllegalArgumentException myExp_63 )
			{
				   long [][][] var_65 = {{{(8734469071125837128L),(-1351673785233412940L),(8049343498723729025L),(3339987279724491992L)},{(4931121848580060006L),(-5301306916616560804L),(858110039946609044L),(-5465735453774958664L)},{(-45802511687071992L),(-950972062584725685L),(3956035764591472225L),(-3501073663694822279L)},{(1684792055525020453L),(2181231052935856183L),(-6781704228661742737L),(1816865605540862798L)}},{{(-6400198097310973645L),(-190237274788437023L),(2448043193845270141L),(8101793379229278562L)},{(-7011044554561666182L),(9219143105249212060L),(-1096374003147709587L),(-6122263249106451217L)},{(-5438746260045875842L),(6262658948909640990L),(-4481011280488803589L),(65458221028654527L)},{(8004323767006072858L),(-8641376737585357342L),(5499532412721417838L),(6735199680970006865L)}},{{(326164385338391880L),(-7684465728355526736L),(1683080266049969662L),(3653558163926043692L)},{(-3075888109757470871L),(7845892565195718747L),(1766781261476563738L),(-857506479970591659L)},{(-6136922777487110291L),(-953283172847902661L),(-7175217242122948618L),(-9098220465591450851L)},{(-5944246596827374479L),(-5671322431454107091L),(6299160030640627874L),(-6542408280051751380L)}},{{(-2675595851804446464L),(-884928926648138906L),(111519854620215261L),(-853475838385561329L)},{(-344888028714128218L),(-3566808614071986089L),(7973746517562817239L),(7077532020207282301L)},{(-3292760363761025777L),(3753536365820389604L),(476059839510667369L),(-7847084441072480307L)},{(-4930841740673789114L),(-1272952000311975550L),(6907217372280107381L),(6840881654705358934L)}},{{(4610726852231563018L),(-8858628127927981328L),(-91734374221701814L),(-7094039840999263067L)},{(-5835364866117123887L),(-3018733816576816202L),(-8971505536119727081L),(319561400702152272L)},{(3511395542150368061L),(-605838012463268916L),(7131721985522623812L),(-4052939799401221447L)},{(2664971360758618077L),(-6134876106838181394L),(-8770502749907683815L),(5486633008714717204L)}}};
				var_54[4] = (((var_5++)&var_25)-var_64) ;
				var_45 = ((++var_57)-var_31.var_61) ;
				System.out.println("hello exception 6 !");
			}
			var_37[((((++var_66)-var_31.var_67)-var_31.var_67)&3)][((var_66++)&2)] = var_31 ;
			for( var_68 = 795 ;(var_68>779);var_68 = (var_68-4) )
			{
				   cl_33 var_69 = new cl_33();
				   int var_71 = (-172876165);
				   short [][] var_70 = {{(short)(23604),(short)(31219),(short)(21285)},{(short)(27001),(short)(-11128),(short)(14666)},{(short)(-27392),(short)(29448),(short)(17081)},{(short)(-6875),(short)(29497),(short)(-10607)},{(short)(-16517),(short)(30249),(short)(-26298)},{(short)(-21746),(short)(31538),(short)(917)},{(short)(23913),(short)(-512),(short)(-26530)}};
				var_48 = (var_5--) ;
				var_37[(((++var_57)+var_57)&3)][((var_5++)&2)] = var_31 ;
				var_53[(var_68&4)] = ((var_42--)*var_49.var_72) ;
				var_4[(var_68&0)] = ((++var_57)+var_5) ;
				var_53[((var_48++)&4)] = (2.68065e-98D) ;
			}
		}
		catch( java.lang.ArithmeticException myExp_74 )
		{
			   short var_75 = (short)(25285);
			if( ((var_75++)>var_76))
			{
				var_31 = var_31 ;
			}
			else
			{
				var_31 = var_31 ;
			}
			System.out.println("hello exception 7 !");
		}
	}
	return var_37;
}

	public  long GetChecksum()
	{
		System.out.printf("---Begin GetChecksum:%s\tLine=%d\n",Thread.currentThread().getStackTrace()[1].getClassName(),Thread.currentThread().getStackTrace()[1].getLineNumber());
		CrcBuffer b = new CrcBuffer(187);
		CrcCheck.ToByteArray(this.var_2,b,"var_2");
		for(int a0=0;a0<1;++a0){
			CrcCheck.ToByteArray(this.var_4[a0],b,"var_4" + "["+ Integer.toString(a0)+"]");
		}
		CrcCheck.ToByteArray(this.var_5,b,"var_5");
		CrcCheck.ToByteArray(this.var_10,b,"var_10");
		CrcCheck.ToByteArray(this.var_12,b,"var_12");
		CrcCheck.ToByteArray(this.var_18.GetChecksum(),b,"var_18.GetChecksum()");
		CrcCheck.ToByteArray(this.var_25,b,"var_25");
		CrcCheck.ToByteArray(this.var_31.GetChecksum(),b,"var_31.GetChecksum()");
		CrcCheck.ToByteArray(this.var_33,b,"var_33");
		for(int a0=0;a0<4;++a0){
		for(int a1=0;a1<3;++a1){
			CrcCheck.ToByteArray(this.var_37[a0][a1].GetChecksum(),b,"var_37" + "["+ Integer.toString(a0)+"]" + "["+ Integer.toString(a1)+"]"+".GetChecksum()");
		}
		}
		for(int a0=0;a0<1;++a0){
			CrcCheck.ToByteArray(this.var_47[a0],b,"var_47" + "["+ Integer.toString(a0)+"]");
		}
		CrcCheck.ToByteArray(this.var_49.GetChecksum(),b,"var_49.GetChecksum()");
		CrcCheck.ToByteArray(this.var_64,b,"var_64");
		CrcCheck.ToByteArray(this.var_66,b,"var_66");
		CrcCheck.ToByteArray(this.var_73,b,"var_73");
		CrcCheck.ToByteArray(this.var_76,b,"var_76");
		CrcCheck.ToByteArray(this.var_79,b,"var_79");
		CrcCheck.ToByteArray(this.var_97,b,"var_97");
		CrcCheck.ToByteArray(this.var_107,b,"var_107");
		CrcCheck.ToByteArray(this.var_111,b,"var_111");
		CrcCheck.ToByteArray(this.var_113,b,"var_113");
		CrcCheck.ToByteArray(this.var_116,b,"var_116");
		CRC32 c = new CRC32();
		c.update(b.buffer,0,b.i);
		System.out.printf("---End GetChecksum:%s\tLine=%d\n",Thread.currentThread().getStackTrace()[1].getClassName(),Thread.currentThread().getStackTrace()[1].getLineNumber());
		return c.getValue();
	}
}
