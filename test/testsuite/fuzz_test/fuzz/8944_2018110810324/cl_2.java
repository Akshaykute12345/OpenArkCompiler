/*
 * Copyright (c) [2020] Huawei Technologies Co.,Ltd.All rights reserved.
 *
 * OpenArkCompiler is licensed under the Mulan PSL v1.
 * You can use this software according to the terms and conditions of the Mulan PSL v1.
 * You may obtain a copy of Mulan PSL v1 at:
 *
 *     http://license.coscl.org.cn/MulanPSL
 *
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
 * FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PSL v1 for more details.
 */

//SEED=2002426344

import java.util.zip.CRC32;

class cl_2 
{
	   float var_43 = (0.00705635F);
	   short var_44 = (short)(28144);
	   boolean var_58 = false;
	   double var_90 = (-3.77577e+205D);
	final   long [][][] var_118 = {{{(-6835776911851970080L),(-7661766885307476979L),(7021108031236460354L)},{(-6717785316482534446L),(-2265487533673328013L),(3364730149395946703L)},{(-4086475557411249506L),(-7416825003383244322L),(-4281615386564610135L)},{(-8660135832382636921L),(7236722198954494165L),(666941446079777434L)},{(374524784315870121L),(2132060753071684399L),(-1722455106601114443L)},{(-1280300172955717585L),(64089930367028102L),(7899753253608523805L)}},{{(3804863160405632741L),(6146305579954534356L),(1272990792812914038L)},{(-362368250757313350L),(6912735447711992388L),(4108195234829810151L)},{(1318783314927363881L),(-2927785868745455805L),(5220306522505201242L)},{(3772012397437563301L),(4700779475346385300L),(5683112914609773719L)},{(-1852553249563618256L),(-2324306643831475883L),(1556101157159922391L)},{(1499543002832531491L),(7194901346931790026L),(-3599370033965436218L)}},{{(-403395892309007855L),(2780708331439117030L),(-4585651141878630016L)},{(-3194119004308184142L),(1120698158214047641L),(-5035790387167817916L)},{(-783621040011359683L),(2841826912945615757L),(1843091826797114220L)},{(5139604196448419315L),(-4091180761144564431L),(6051706170818322689L)},{(-6981154019223164760L),(-5786649948724538889L),(1330136224383842293L)},{(-3215695306954815581L),(-6371758387553150993L),(-7421034414194525079L)}},{{(-7788060738474515640L),(-5750277191085742612L),(2338184996020860587L)},{(6676355613225309810L),(-1627398256240383494L),(-5177700454906734611L)},{(4721773593932996573L),(1590132903331587961L),(5688216003394157558L)},{(1250041497324082894L),(1584756171324664788L),(4946451282291678579L)},{(120401343215744295L),(2863175398576648157L),(-958126065286781797L)},{(7359227404680140123L),(2995970353143586125L),(5204054584326916698L)}},{{(179752694919684922L),(1071156200504952304L),(6995143219733328042L)},{(-3869633867592758609L),(-5461949420766899424L),(-1538456673726926971L)},{(7763558764734385606L),(7252984783280110310L),(1806606513403541257L)},{(-6236176372067325717L),(2827514839675564820L),(8042244296472378620L)},{(-7302334697544476581L),(1672323277197073068L),(-2478103552548090080L)},{(-8673657381812486571L),(4291451784522550211L),(-2430754418800340915L)}}};
	   long var_126 = (-2006042794509629037L);
/*********************************/

	public  long GetChecksum()
	{
		System.out.printf("---Begin GetChecksum:%s\tLine=%d\n",Thread.currentThread().getStackTrace()[1].getClassName(),Thread.currentThread().getStackTrace()[1].getLineNumber());
		CrcBuffer b = new CrcBuffer(743);
		CrcCheck.ToByteArray(this.var_43,b,"var_43");
		CrcCheck.ToByteArray(this.var_44,b,"var_44");
		CrcCheck.ToByteArray(this.var_58,b,"var_58");
		CrcCheck.ToByteArray(this.var_90,b,"var_90");
		for(int a0=0;a0<5;++a0){
		for(int a1=0;a1<6;++a1){
		for(int a2=0;a2<3;++a2){
			CrcCheck.ToByteArray(this.var_118[a0][a1][a2],b,"var_118" + "["+ Integer.toString(a0)+"]" + "["+ Integer.toString(a1)+"]" + "["+ Integer.toString(a2)+"]");
		}
		}
		}
		CrcCheck.ToByteArray(this.var_126,b,"var_126");
		CRC32 c = new CRC32();
		c.update(b.buffer,0,b.i);
		System.out.printf("---End GetChecksum:%s\tLine=%d\n",Thread.currentThread().getStackTrace()[1].getClassName(),Thread.currentThread().getStackTrace()[1].getLineNumber());
		return c.getValue();
	}
}
