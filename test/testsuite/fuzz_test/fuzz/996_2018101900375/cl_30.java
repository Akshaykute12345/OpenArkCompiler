/*
 * Copyright (c) [2020] Huawei Technologies Co.,Ltd.All rights reserved.
 *
 * OpenArkCompiler is licensed under the Mulan PSL v1.
 * You can use this software according to the terms and conditions of the Mulan PSL v1.
 * You may obtain a copy of Mulan PSL v1 at:
 *
 *     http://license.coscl.org.cn/MulanPSL
 *
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
 * FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PSL v1 for more details.
 */

//SEED=1808069720

//import java.util.zip.CRC32;

class cl_30 
{
	   int var_35 = (2082603279);
	final   double var_39 = (-3.32156e+75D);
	   float var_70 = (-5.56666e-32F);
	   int [][][] var_101 = {{{(-1410969422),(-1303377687)},{(-1349717389),(-311576448)},{(-757379112),(-989534312)},{(-314990128),(1061658398)},{(-563100915),(-817331438)}},{{(-1100150701),(1599270460)},{(-140811788),(-1030406416)},{(-1788318120),(-640743316)},{(-1734373798),(-1273060379)},{(-1372194163),(1331642262)}},{{(1629698645),(-1383791846)},{(2135793896),(-1997298539)},{(-1647107979),(1220574140)},{(-2019936913),(-414849319)},{(550687345),(1549645195)}},{{(914736372),(1014967020)},{(-141870376),(-418937210)},{(-835440803),(-1397894558)},{(378052628),(-1543098592)},{(-2140712914),(1007397461)}}};
	   byte var_181 = (byte)(-59);
	final   boolean var_204 = false;
	   short var_214 = (short)(-26092);
	   long [][][] var_552 = {{{(-6745606937177062630L),(-7938813219731281086L),(-3634803064197829759L),(-4435168618938513522L),(-6642457037119746600L),(-5610365612684369001L)},{(-8882116423044073252L),(4614327407856053488L),(996231226931434813L),(6319920773492712011L),(-6929113237906309536L),(5023029161729056766L)},{(-1317764386607755221L),(-4884776620537690160L),(-6367449130444670497L),(-7527046859627492397L),(-8709570055265290387L),(-5425430294460030704L)},{(-5696997419068277123L),(518399607538936588L),(-6336517633183912087L),(4159310127645127096L),(-1226226336543197890L),(6274514891019984962L)},{(3095070913277710058L),(5216902178502074472L),(-6695244743906035964L),(-681098099667112869L),(-1072365955546014416L),(-3587749510866694006L)},{(8225885562272988870L),(5771661034402707686L),(178436252379314093L),(291488374822185478L),(-7635796121018183218L),(6743155828008877443L)}},{{(8345170271777493197L),(-9205335318253760901L),(-5775226470571344180L),(-8878465758078989251L),(-1257172022693018167L),(5370511250927941485L)},{(-8868825273222206164L),(-3404488054200866924L),(3728789959961059780L),(6833126189914113204L),(4020798754260958964L),(-3491013909780203935L)},{(6269539672734572899L),(-2557156421841244348L),(4242969627696037320L),(-1790975425834073635L),(8867479904552776159L),(1964084971959360226L)},{(-5106417786867471725L),(3810445739093102063L),(-4804495578546207903L),(2229732117145063130L),(1519468017311848088L),(-3315490573305411207L)},{(2869977051506820301L),(-2245831850389160177L),(7054620276130817545L),(-3569785339935014034L),(-5394286810718373280L),(5495007077660780521L)},{(-2005021978750907904L),(2420165971542693281L),(-994339399669594189L),(-8211066214713558000L),(-76812861029934133L),(-117620690910112729L)}},{{(7275571654758450141L),(-4348052955838612949L),(4032640655133278378L),(-87234059305338933L),(-2226798814507276919L),(8878322151239903454L)},{(7368594479692990145L),(-6137069056159614075L),(-1630675150475388994L),(-8364881023992879727L),(-2691292155901012325L),(1964150185803608964L)},{(3133661414877321171L),(2723519674940246710L),(5385267957663986626L),(-3915254886315768411L),(1085682582815024689L),(-3226980924751406463L)},{(-6473591558350116143L),(187440995352830103L),(-4784233926092050034L),(7754963284272947283L),(4066040703724405870L),(1742006379890779755L)},{(-1256694946826321236L),(3553669320329069341L),(4734030842585392044L),(-4210488087723225214L),(2443732592101346498L),(6905346265050346041L)},{(465947080595727743L),(115439980046412779L),(4096065791714024493L),(4285109995129227257L),(-1475993783313021662L),(-2763414192891237058L)}},{{(8794524874837241758L),(2711623540196652337L),(-1470669652069555363L),(3325308679819145817L),(5559455888951432452L),(8129051046153296299L)},{(591168594334974893L),(929037132944431824L),(-4440935916136344935L),(-3376054603992662485L),(-4858569249712448526L),(6529210191735294726L)},{(-6564722955921555643L),(-3685701737850108607L),(5529504622695986856L),(-7392727649067182449L),(-1058975996321954594L),(-1227095682918150788L)},{(6710832028128575551L),(2969231976430329480L),(-4973590516679671145L),(-8186864054283756439L),(878846651450563693L),(-4723100591703671225L)},{(-5545975864424056417L),(348901629777229452L),(-6778162430268698255L),(-3811579950867686888L),(-6325876950511508540L),(5758112682951993579L)},{(4582898544219071963L),(2006887675388877387L),(-1687435810818213426L),(-726213488335102858L),(5152571590539950113L),(-4775884400413929505L)}},{{(6218733358378547392L),(139952779825284952L),(-1777209247073481993L),(2105054484851294799L),(-6091755678843398851L),(6474784822821140244L)},{(1541091480971740348L),(-5649827083385576975L),(-6758224144455694334L),(8078233869049874500L),(-7830681415240639162L),(4330960127351150050L)},{(-4257710139667989515L),(-285638032197791358L),(2489288335223302487L),(1223104472975424230L),(-7951533353922842132L),(1905288027092423493L)},{(3717848701247391691L),(-2059751344288810866L),(-174006291511870361L),(-8938745025978884172L),(-5195042933845461590L),(-1287004068347483120L)},{(-5559622681232241733L),(-7872520132882649715L),(8851864121056366112L),(3479894275366633173L),(-832195744995796350L),(2845532345053770932L)},{(7248716206176335753L),(8091194124342516582L),(7367622026842644985L),(3286546429027915682L),(4861535321483937397L),(-5997470215763199L)}},{{(-1870798973713737929L),(1004954766736389327L),(-8916204539727409764L),(8796267178912635925L),(-2211743548022399290L),(5188706300870977667L)},{(-7272147485394146890L),(-2288979611802319357L),(-6287592698693621074L),(-4279752228325774593L),(7012934359802927469L),(-2537856361203373192L)},{(-3506832628503070984L),(-3158193818766946068L),(4225369723301149155L),(-2267782744418610500L),(-5456584766224174315L),(6092644305242032569L)},{(6129551024322707416L),(-5726315853773414191L),(1746737764981266543L),(8143746077381490439L),(-5789422949110537313L),(4085371416845782380L)},{(-525786951712608295L),(-8907475517641890857L),(2735479829488654640L),(3347623368876699187L),(-8942915301943791568L),(6750443943977854979L)},{(6159035597170550371L),(2467963499664847514L),(6972032525815824344L),(6722866006609537894L),(6922007968527263855L),(-7899553613601939306L)}}};
/*********************************/

	public  long GetChecksum()
	{
		System.out.printf("---Begin GetChecksum:%s\tLine=%d\n",Thread.currentThread().getStackTrace()[1].getClassName(),Thread.currentThread().getStackTrace()[1].getLineNumber());
		CrcBuffer b = new CrcBuffer(1908);
		CrcCheck.ToByteArray(this.var_35,b,"var_35");
		CrcCheck.ToByteArray(this.var_39,b,"var_39");
		CrcCheck.ToByteArray(this.var_70,b,"var_70");
		for(int a0=0;a0<4;++a0){
		for(int a1=0;a1<5;++a1){
		for(int a2=0;a2<2;++a2){
			CrcCheck.ToByteArray(this.var_101[a0][a1][a2],b,"var_101" + "["+ Integer.toString(a0)+"]" + "["+ Integer.toString(a1)+"]" + "["+ Integer.toString(a2)+"]");
		}
		}
		}
		CrcCheck.ToByteArray(this.var_181,b,"var_181");
		CrcCheck.ToByteArray(this.var_204,b,"var_204");
		CrcCheck.ToByteArray(this.var_214,b,"var_214");
		for(int a0=0;a0<6;++a0){
		for(int a1=0;a1<6;++a1){
		for(int a2=0;a2<6;++a2){
			CrcCheck.ToByteArray(this.var_552[a0][a1][a2],b,"var_552" + "["+ Integer.toString(a0)+"]" + "["+ Integer.toString(a1)+"]" + "["+ Integer.toString(a2)+"]");
		}
		}
		}
		CRC32 c = new CRC32();
		c.update(b.buffer,0,b.i);
		System.out.printf("---End GetChecksum:%s\tLine=%d\n",Thread.currentThread().getStackTrace()[1].getClassName(),Thread.currentThread().getStackTrace()[1].getLineNumber());
		return c.getValue();
	}
}
